<?xml version="1.0" encoding="UTF-8"?>
<project name="CheckerPlugin" default="build.jars" basedir=".">

	<property name="basews" value="${ws}"/>
	<property name="baseos" value="${os}"/>
	<property name="basearch" value="${arch}"/>
	<property name="basenl" value="${nl}"/>

	<!-- Compiler settings. -->
	<property name="javacFailOnError" value="true"/>
	<property name="javacDebugInfo" value="on"/>
	<property name="javacVerbose" value="false"/>
	<property name="logExtension" value=".log"/>
	<property name="compilerArg" value=""/>
	<property name="javacSource" value="1.5"/>
	<property name="javacTarget" value="1.5"/>
	<property name="bundleJavacSource" value="${javacSource}"/>
	<property name="bundleJavacTarget" value="${javacTarget}"/>

	<target name="init" depends="properties">
		<condition property="pluginTemp" value="${buildTempFolder}/plugins">
			<isset property="buildTempFolder"/>
		</condition>
		<property name="pluginTemp" value="${basedir}"/>
		<condition property="build.result.folder" value="${pluginTemp}/CX-Checker">
			<isset property="buildTempFolder"/>
		</condition>
		<property name="build.result.folder" value="${basedir}"/>
		<property name="temp.folder" value="${basedir}/temp.folder"/>
		<property name="plugin.destination" value="${basedir}"/>
	</target>

	<target name="properties" if="eclipse.running">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>

	</target>

	<target name="build.update.jar" depends="init" description="Build the plug-in: CheckerPlugin for an update site.">
		<delete dir="${temp.folder}"/>
		<mkdir dir="${temp.folder}"/>
		<antcall target="build.jars"/>
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<zip destfile="${plugin.destination}/CheckerPlugin_1.0.0.jar" basedir="${temp.folder}/CheckerPlugin_1.0.0" filesonly="false" whenempty="skip" update="false"/>
		<delete dir="${temp.folder}"/>
	</target>

	<target name="@dot" depends="init" unless="@dot" description="Create jar: CheckerPlugin @dot.">
		<property name="myEclipseTop" value="MY_ECLIPSE_TOP"/>
		<delete dir="${temp.folder}/@dot.bin"/>
		<mkdir dir="${temp.folder}/@dot.bin"/>
		<path id="@dot.classpath">
			<pathelement path="${myEclipseTop}/org.eclipse.ui_3.2.1.M20061108.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.core.runtime_3.2.0.v20060603.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.osgi_3.2.2.R32x_v20070118.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.equinox.common_3.2.0.v20060603.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.core.jobs_3.2.0.v20060603.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.core.runtime.compatibility.registry_3.2.1.R32x_v20060907/runtime_registry_compatibility.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.core.runtime.compatibility.registry_3.2.1.R32x_v20060907"/>
			<pathelement path="${myEclipseTop}/org.eclipse.equinox.registry_3.2.1.R32x_v20060814.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.equinox.preferences_3.2.1.R32x_v20060717.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.core.runtime.compatibility.registry_3.2.1.R32x_v20060907/@dot"/>
			<pathelement path="${myEclipseTop}/org.eclipse.core.contenttype_3.2.0.v20060603.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.core.runtime.compatibility.auth_3.2.0.v20060601.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.swt_3.2.2.v3236b.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.swt.gtk.linux.x86_3.2.2.v3236.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.jface_3.2.2.M20061214-1200.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.core.commands_3.2.0.I20060605-1400.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.ui.workbench_3.2.2.M20070119-0800.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.ui.workbench.compatibility_3.2.0.I20060605-1400/@dot"/>
			<pathelement path="${myEclipseTop}/org.eclipse.ui.workbench.compatibility_3.2.0.I20060605-1400/compatibility.jar"/>
			<pathelement path="${myEclipseTop}/com.ibm.icu_3.4.5.20061213.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.help_3.2.2.R322_v20061213.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.core.expressions_3.2.2.r322_v20070109a.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.core.resources_3.2.2.R32x_v20061218.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.core.resources.compatibility_3.2.0.v20060603.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.core.runtime.compatibility_3.1.100.v20060603.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.update.configurator_3.2.2.R32x_v20070111.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.ant.core_3.1.100.v20060531.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.core.variables_3.1.100.v20060605.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.core.filesystem_1.0.0.v20060603.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.core.filesystem.linux.x86_1.0.0.v20060603.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.ui.workbench.texteditor_3.2.0.v20060605-1400.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.jface.text_3.2.2.r322_v20070104.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.text_3.2.0.v20060605-1400.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.ui.ide_3.2.1.M20060915-1030.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.ui.views_3.2.1.M20060906-0800.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.update.core_3.2.3.R32x_v20070118.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.update.core.linux_3.2.0.v20060605.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.update.ui_3.2.2.R32x_v20070111.jar"/>
			<pathelement path="${myEclipseTop}/org.eclipse.ui.forms_3.2.0.v20060602.jar"/>
			<pathelement path="${myEclipseTop}/org.junit_3.8.1/junit.jar"/>
			<pathelement path="lib/sapid.jar"/>
			<pathelement path="lib/java-getopt-1.0.9.jar"/>
			<pathelement path="${build.result.folder}/../CheckerPlugin/lib/sapid.jar"/>
			<pathelement path="../jar/dtdparser-1.21.jar"/>
			<pathelement path="${build.result.folder}/../CheckerPlugin/../jar/dtdparser-1.21.jar"/>
		</path>
		<!-- compile the source code -->
		<javac destdir="${temp.folder}/@dot.bin" failonerror="${javacFailOnError}" verbose="${javacVerbose}" debug="${javacDebugInfo}" includeAntRuntime="no" source="${bundleJavacSource}" target="${bundleJavacTarget}" encoding="EUC_JP"		>
			<compilerarg line="${compilerArg}" compiler="${build.compiler}"/>
			<classpath refid="@dot.classpath" />
			<src path="src/"			/>
			<compilerarg value="@${basedir}/javaCompiler...args" compiler="org.eclipse.jdt.core.JDTCompilerAdapter"/>
			<compilerarg line="-log '${temp.folder}/@dot.bin${logExtension}'" compiler="org.eclipse.jdt.core.JDTCompilerAdapter"/>
		</javac>
		<!-- Copy necessary resources -->
		<copy todir="${temp.folder}/@dot.bin" failonerror="true" overwrite="false">
			<fileset dir="src/" excludes="**/*.java, **/package.htm*"			/>
		</copy>
		<mkdir dir="${build.result.folder}"/>
		<copy todir="${build.result.folder}/@dot" failonerror="true" overwrite="false">
			<fileset dir="${temp.folder}/@dot.bin"			/>
		</copy>
		<delete dir="${temp.folder}/@dot.bin"/>
	</target>

	<target name="src.zip" depends="init" unless="src.zip">
		<mkdir dir="${build.result.folder}"/>
		<zip destfile="${build.result.folder}/src.zip" filesonly="false" whenempty="skip" update="false">
			<fileset dir="src/" includes="**/*.java"			/>
		</zip>
	</target>

	<target name="build.jars" depends="init" description="Build all the jars for the plug-in: CheckerPlugin.">
		<available property="@dot" file="${build.result.folder}/@dot"/>
		<antcall target="@dot"/>
	</target>

	<target name="build.sources" depends="init">
		<available property="src.zip" file="${build.result.folder}/src.zip"/>
		<antcall target="src.zip"/>
	</target>

	<target name="gather.bin.parts" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/CheckerPlugin_1.0.0"/>
		<copy todir="${destination.temp.folder}/CheckerPlugin_1.0.0" failonerror="true" overwrite="false">
			<fileset dir="${build.result.folder}/@dot" includes="**"			/>
		</copy>
		<copy todir="${destination.temp.folder}/CheckerPlugin_1.0.0" failonerror="true" overwrite="false">
			<fileset dir="${basedir}" includes="plugin.xml,META-INF/,lib/sapid.jar,../jar/dtdparser-1.21.jar,plugin.properties,plugin_ja.properties,icons/"			/>
		</copy>
	</target>

	<target name="build.zips" depends="init">
	</target>

	<target name="gather.sources" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/CheckerPlugin_1.0.0"/>
		<copy file="${build.result.folder}/src.zip" todir="${destination.temp.folder}/CheckerPlugin_1.0.0" failonerror="false" overwrite="false"/>
	</target>

	<target name="gather.logs" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/CheckerPlugin_1.0.0"/>
		<copy file="${temp.folder}/@dot.bin${logExtension}" todir="${destination.temp.folder}/CheckerPlugin_1.0.0" failonerror="false" overwrite="false"/>
	</target>

	<target name="clean" depends="init" description="Clean the plug-in: CheckerPlugin of all the zips, jars and logs created.">
		<delete dir="${build.result.folder}/@dot"/>
		<delete file="${build.result.folder}/src.zip"/>
		<delete file="${plugin.destination}/CheckerPlugin_1.0.0.jar"/>
		<delete file="${plugin.destination}/CheckerPlugin_1.0.0.zip"/>
		<delete dir="${temp.folder}"/>
	</target>

	<target name="refresh" depends="init" if="eclipse.running" description="Refresh this folder.">
		<eclipse.convertPath fileSystemPath="/home/yamamoto/SVN-CX-CHECKER/CX-Checker" property="resourcePath"/>
		<eclipse.refreshLocal resource="${resourcePath}" depth="infinite"/>
	</target>

	<target name="zip.plugin" depends="init" description="Create a zip containing all the elements for the plug-in: CheckerPlugin.">
		<delete dir="${temp.folder}"/>
		<mkdir dir="${temp.folder}"/>
		<antcall target="build.jars"/>
		<antcall target="build.sources"/>
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<antcall target="gather.sources">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<delete>
			<fileset dir="${temp.folder}" includes="**/*.bin${logExtension}"			/>
		</delete>
		<zip destfile="${plugin.destination}/CheckerPlugin_1.0.0.zip" basedir="${temp.folder}" filesonly="true" whenempty="skip" update="false"/>
		<delete dir="${temp.folder}"/>
	</target>

</project>
